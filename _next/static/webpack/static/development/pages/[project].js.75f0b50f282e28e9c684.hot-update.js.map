{"version":3,"file":"static/webpack/static\\development\\pages\\[project].js.75f0b50f282e28e9c684.hot-update.js","sources":["webpack:///./src/components/Sharing.js"],"sourcesContent":["// Importing sharing buttons from react\r\nimport {\r\n    EmailShareButton,\r\n    EmailIcon,\r\n    FacebookShareButton,\r\n    FacebookShareCount,\r\n    FacebookIcon,\r\n    FacebookMessengerShareButton,\r\n    FacebookMessengerIcon,\r\n    LineShareButton,\r\n    LineIcon,\r\n    LinkedinShareButton,\r\n    LinkedinIcon,\r\n    PinterestShareButton,\r\n    PinterestShareCount,\r\n    PinterestIcon,\r\n    RedditShareButton,\r\n    RedditShareCount,\r\n    RedditIcon,\r\n    TumblrShareButton,\r\n    TumblrShareCount,\r\n    TumblrIcon,\r\n    TwitterShareButton,\r\n    TwitterIcon,\r\n    WhatsappShareButton,\r\n    WhatsappIcon\r\n} from \"react-share\";\r\n\r\n\r\nexport default class Sharing extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.onPopupClicked = this.onPopupClicked.bind(this);\r\n    }\r\n\r\n    onPopupClicked(){\r\n        this.props.onClose();\r\n    }\r\n\r\n    render(){\r\n               \r\n        if(this.props.disp){\r\n        return (\r\n        <div className=\"popup\">\r\n            <button className=\"popup-button\" onClick={this.onPopupClicked}>\r\n                {/* <img className=\"close-icon\" alt=\"Close\" src={closeIcon}></img> */}\r\n\r\n            </button>\r\n            <div className=\"popup-container\">\r\n                <div className=\"popup-div\">\r\n                    <h1>Share \"{this.props.project.name}\"</h1>\r\n                    <br/>\r\n                    <div className=\"share-button-div\">\r\n                        <EmailShareButton url={this.props.url}>\r\n                            <EmailIcon round='true'></EmailIcon>\r\n                        </EmailShareButton>\r\n                        <FacebookShareButton url={this.props.url}>\r\n                            <FacebookIcon round=\"true\"></FacebookIcon>\r\n                            <span className=\"share-count-wrapper\">\r\n                                <FacebookShareCount url={this.props.url}>\r\n                                    {count => {\r\n                                        if(count != 0) return count\r\n                                        else setTimeout(()=>{return 0}, 1000)}}\r\n                                </FacebookShareCount>\r\n                            </span>\r\n                        </FacebookShareButton>\r\n                        <FacebookMessengerShareButton url={this.props.url} appId=\"2064569620236469\">\r\n                            <FacebookMessengerIcon round=\"true\"></FacebookMessengerIcon>\r\n                        </FacebookMessengerShareButton>\r\n                        <LineShareButton url={this.props.url}>\r\n                            <LineIcon round=\"true\"></LineIcon>\r\n                        </LineShareButton>\r\n                        <LinkedinShareButton url={this.props.url}>\r\n                            <LinkedinIcon round=\"true\"></LinkedinIcon>\r\n                        </LinkedinShareButton>\r\n                        <PinterestShareButton url={this.props.url}>\r\n                            <PinterestIcon round=\"true\"></PinterestIcon>\r\n                            <span className=\"share-count-wrapper\">\r\n                                <PinterestShareCount url={this.props.url}>\r\n                                    {count => {\r\n                                            console.log(count)\r\n                                            return count}}\r\n                                </PinterestShareCount>\r\n                            </span>\r\n                        </PinterestShareButton>\r\n                    </div>\r\n                    {/* <h1>Sharing Coming Soon!</h1> */}\r\n                    {/* <small>Click anywhere outside of this popup to return.</small> */}\r\n                </div>\r\n            </div>\r\n        </div>)\r\n        }else{\r\n            return <div></div>\r\n        }\r\n    };\r\n}\r\n\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AA2BA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAGA;AACA;;;AACA;AACA;AACA;;;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAUA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;AAjEA;AACA;;;;;A","sourceRoot":""}