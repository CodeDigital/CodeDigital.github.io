{"version":3,"file":"static/webpack/static\\development\\pages\\[project].js.8bc2f8667ae846c3953b.hot-update.js","sources":["webpack:///./src/pages/[project].js"],"sourcesContent":["//TODO: Convert this to function component!\r\n\r\nimport Body from '../components/Body';\r\nimport Sharing from \"../components/Sharing\";\r\nimport parse from 'html-react-parser';\r\n\r\nimport Head from 'next/head';\r\nimport Link from 'next/link';\r\nimport { useRouter } from 'next/router';\r\n\r\nimport {getProjectThumbnailData, getProject,getScriptHTML} from '../../lib/pages';\r\nimport {getFullURL} from '../../lib/urls';\r\n\r\nconst Project = (props) => {\r\n\r\n    const router = useRouter();\r\n    // console.log(router);\r\n    const [share, setShare] = React.useState(false);\r\n\r\n    const onShareClick = () => {\r\n        setShare(true);\r\n    }\r\n\r\n    const onShareClose = () => {\r\n        setShare(false);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        return () => {\r\n            console.log('Clearing p5 Sketches');\r\n            try{remove();}catch{console.log('P5 Sketch Not Removed');}\r\n            try{unmountScript()}catch{console.log('No Unmount Script');}\r\n            try{endSound();}catch{console.log('No \"endsound\" Script');}\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <Body>\r\n        <div className=\"project-page\" id=\"project-page\">\r\n            {parse(props.scripts)}\r\n            <Link href=\"/\">\r\n                <img className=\"close-icon\" alt=\"Close\" src=\"/assets/img/closeIcon.png\"></img>\r\n            </Link>\r\n            {/* <img onClick={onShareClick} src=\"/assets/img/shareIcon.png\" alt=\"\" className=\"share-icon\"/> */}\r\n            <Head>\r\n                <title>{props.project.name + \" | Code Digital\"}</title>\r\n                <link rel=\"icon\" href=\"/favicon.ico\"/>\r\n\r\n                {/* <!-- Primary Meta Tags --> */}\r\n                <meta name=\"title\" content={props.project.name + \" | Code Digital\"}/>\r\n                <meta name=\"description\" content={props.project.description}/>\r\n\r\n                {/* <!-- Open Graph / Facebook --> */}\r\n                <meta property=\"og:type\" content=\"website\"/>\r\n                <meta property=\"og:url\" content={getFullURL(router.asPath)}/>\r\n                <meta property=\"og:title\" content={props.project.name + \" | Code Digital\"}/>\r\n                <meta property=\"og:description\" content={props.project.description}/>\r\n                <meta property=\"og:image\" content={getFullURL('/_posts/projects' + router.asPath + '/thumbnail.png')}/>\r\n\r\n                {/* <!-- Twitter --> */}\r\n                <meta property=\"twitter:card\" content=\"summary_large_image\"/>\r\n                <meta property=\"twitter:url\" content={getFullURL(router.asPath)}/>\r\n                <meta property=\"twitter:title\" content={props.project.name + \" | Code Digital\"}/>\r\n                <meta property=\"twitter:description\" content={props.project.description}/>\r\n                <meta property=\"twitter:image\" content={getFullURL('/_posts/projects' + router.asPath + '/thumbnail.png')}/>\r\n            </Head>\r\n            <div id=\"projectHTMLContainer\">\r\n                {parse(props.project.html)}\r\n            </div>\r\n            <Sharing url={getFullURL(router.asPath)} project={props.project} disp={share} onClose={onShareClose}></Sharing>\r\n\r\n        </div>\r\n        </Body>\r\n    );\r\n}\r\n\r\nexport async function getStaticProps({params}) {\r\n    const scriptHTML = getScriptHTML();\r\n    \r\n    const projectDir = params.project;\r\n    // console.log(projectDir);\r\n    const loadedProject = getProject(projectDir);\r\n\r\n    return {props: {\r\n        scripts:scriptHTML,\r\n        project:loadedProject\r\n    }};\r\n  }\r\n\r\nexport async function getStaticPaths() {\r\n    const projectList = getProjectThumbnailData();\r\n\r\n    let projectPaths = projectList.map(p => {\r\n        return \"/\" + p.dir\r\n    });\r\n    // projectPaths.push({params:'about'})\r\n    // projectPaths.push({params:'contact'})\r\n    // console.log(projectPaths)\r\n    return {paths:\r\n        projectPaths,\r\n    'fallback':false}\r\n}\r\n\r\nexport default Project;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;;AA4BA;;;;A","sourceRoot":""}