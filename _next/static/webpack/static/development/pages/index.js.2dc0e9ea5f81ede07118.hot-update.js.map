{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.2dc0e9ea5f81ede07118.hot-update.js","sources":["webpack:///./src/components/Navigator.js"],"sourcesContent":["const SEARCHPARAM = \"?search=\";\r\nconst WEBLOGPARAM = \"&weblog=\";\r\nfunction checkURLSearch(){\r\n    let lsearch = window.location.search;\r\n    //let query = lsearch.substr(lsearch.indexOf(SEARCHPARAM)+SEARCHPARAM.length,lsearch.indexOf(WEBLOGPARAM));\r\n    if(lsearch){\r\n        let query = lsearch.substring(lsearch.indexOf(SEARCHPARAM)+SEARCHPARAM.length,(lsearch.includes(WEBLOGPARAM) ? lsearch.indexOf(WEBLOGPARAM):lsearch.length-1));\r\n        let weblog = lsearch.substring(lsearch.indexOf(WEBLOGPARAM)+WEBLOGPARAM.length);\r\n        let isWeblog = (weblog.includes(\"true\") ? true:false);\r\n        return {\r\n            search:query,\r\n            weblog:isWeblog\r\n        };\r\n    }else{\r\n        return false;\r\n    }\r\n}\r\n\r\nconst Navigator = (props) => {\r\n    // onSearch;\r\n        //console.log(props.value)\r\n        const [searchValue, setSearchValue] = React.useState(props.searchValue.length > 0 ? props.searchValue:\"\");\r\n        const [weblog, setWeblog] = React.useState(props.weblog);\r\n        // const [onSearch,] = React.useState(props.onSearch);\r\n        // const [onWeblog,] = React.useState(props.onWeblog);\r\n\r\n        // this.handleSearch = this.handleSearch.bind(this);\r\n        // this.weblogMode = this.weblogMode.bind(this);\r\n        // this.weblogButton = this.weblogButton.bind(this);\r\n\r\n    const handleSearch = (event) => {\r\n        setSearchValue(event.target.value);\r\n        props.onSearch(event.target.value);\r\n    }\r\n\r\n    const weblogMode = (event) => {\r\n        setWeblog(event.target.checked);\r\n        props.onWeblog(event.target.checked);\r\n    }\r\n\r\n    const weblogButton = () => {\r\n        var isWeblog = !weblog;\r\n        weblogMode({\r\n            target: {\r\n                checked:isWeblog\r\n            }\r\n        });\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if(sessionStorage.getItem(\"searchValue\")){\r\n            let newSearch = ' ' + sessionStorage.getItem(\"searchValue\");\r\n            newSearch = newSearch.slice(1);\r\n            // console.log(newSearch);\r\n            handleSearch({\r\n                target:{\r\n                    value:newSearch\r\n                }\r\n            });\r\n        }else{\r\n            handleSearch({\r\n                target:{\r\n                    value:searchValue\r\n                }\r\n            });\r\n        }\r\n\r\n        if(typeof sessionStorage.getItem(\"weblog\") !== undefined){\r\n            let newWeblog = (sessionStorage.getItem(\"weblog\") == 'true');\r\n            // console.log(\"In postMount:\", newWeblog);\r\n            document.getElementById('webLogMode').checked = newWeblog;\r\n            weblogMode({\r\n                target:{\r\n                    checked:newWeblog\r\n                }\r\n            });\r\n        }\r\n\r\n        // console.log(weblog);\r\n    }, []);\r\n\r\n\r\n  React.useEffect(() => {\r\n    sessionStorage.setItem(\"weblog\",weblog);\r\n    // console.log(\"In setWeblog:\", weblog);\r\n    handleSearch({\r\n        target:{\r\n            value:searchValue\r\n        }\r\n    });\r\n  }, [weblog]);\r\n\r\n  React.useEffect(()=>{\r\n    if(searchValue.length > 0){\r\n        sessionStorage.setItem(\"searchValue\",searchValue);\r\n        handleSearch({\r\n            target:{\r\n                value:searchValue\r\n            }\r\n        });\r\n    }\r\n\r\n},[searchValue]);\r\n    \r\n        //if(this.props.weblog){\r\n        return (\r\n            <div className=\"navigator\">\r\n                <img alt=\"n/a\" src='assets/img/searchIcon.png'></img>\r\n                <button onClick={weblogButton}><input type=\"checkbox\" id=\"webLogMode\" name=\"webLogMode\" checked={weblog} onChange={weblogMode}></input>\r\n                <label>Weblog</label></button>\r\n                <input autoComplete=\"on\" placeholder=\"Search projects by name or tag\" type=\"text\" value={searchValue} onChange={handleSearch}></input>\r\n            </div>\r\n            );\r\n}\r\n\r\nexport default Navigator;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAMA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AAKA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;A","sourceRoot":""}